// <auto-generated />
using EPAM_entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(ProductContext))]
    partial class ProductContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EPAM_entity.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Cars"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Tea"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Phones"
                        });
                });

            modelBuilder.Entity("EPAM_entity.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<string>("ProductName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Price = 399.0,
                            ProductName = "Lamborgini",
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            Price = 9.0,
                            ProductName = "Marrokans Mint",
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            Price = 9.0,
                            ProductName = "IPhone 4s",
                            SupplierId = 3
                        });
                });

            modelBuilder.Entity("EPAM_entity.Entities.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            Name = "Serhii Denshchyk"
                        },
                        new
                        {
                            SupplierId = 2,
                            Name = "Illya Ostrovsky"
                        },
                        new
                        {
                            SupplierId = 3,
                            Name = "Danylo Kaminsky"
                        });
                });

            modelBuilder.Entity("EPAM_entity.Entities.Product", b =>
                {
                    b.HasOne("EPAM_entity.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPAM_entity.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
